name: Deploy into VM
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: self-hosted
    steps:   
      - name: Setup PHP        
        uses: actions/checkout@v2
      - name: Use PHP 8.2.x
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: 'composer.json'
      - name: Get Composer Cache Directory
        id: composer-cache
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress
      - name: Update Composer
        run: composer self-update
      - name: Install Dependencies
        run: composer update
        
      - name: Install zip
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
         name: php-app
         path: release.zip
  deploy:
    runs-on: self-hosted
    needs: build
    steps:    
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app          
          #path: "php-app-dep/"
          
      - name: Install zip
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
      - name: Zip files
        run: zip -r release.zip ./*
      - name: unzip artifact for deployment
        run: unzip release.zip 
        
      - name: 'Deploy to Azure VM'
        #id: deploy-to-webapp       
        #uses:  appleboy/ssh-action@master
        #uses: easingthemes/ssh-deploy@main
        uses: appleboy/scp-action@v0.1.4
        
        with:          
          host : ${{secrets.HOST}}
          username : ${{secrets.USER}}          
          port : ${{secrets.PORT}}
          password : ${{secrets.PASS}}          
          source : ./
          target: /var/www/html/Prod2
          strip_components: 1
          #script: whoami|
           #whoami
           #ls -al
           #pwd
